#!/usr/bin/python
# -*- coding: utf-8 -*-
# Theme parser program for BotLibre response lists
#

# External routines

from sys import argv, exit
from os import listdir
from os.path import basename

from responses import parse_responses, show_responses, dump_responses

# Variables

# Functions

# Function: show_help
def show_help():
  self_name = basename(argv[0])
  print("Synopsis:")
  print("\t", self_name, "show <file>")
  print("\t", self_name, "show [field] <file>")
  return None
# Function: show_help

# Main program
if len(argv) < 2:
  show_help()
  exit()
elif argv[1] == "show":
  # Command line: <program> show <file>
  try:
    with open(argv[2], "r", 1) as list_file:
      responses = parse_responses(list_file)
      show_responses(responses)
  except IOError:
    pass
  else:
    list_file.close
    exit()
  # Command line: <program> show [field] <file>
  try:
    with open(argv[3], "r", 1) as list_file:
      responses = parse_responses(list_file)
      show_responses(responses, argv[2])
  except IOError:
    show_help()
    exit()
  else:
    list_file.close
    exit()
elif argv[1] == "dump":
  # Command line: <program> dump <file>
  try:
    with open(argv[2], "r", 1) as list_file:
      responses = parse_responses(list_file)
      dump_responses(responses)
  except IOError:
    show_help()
    exit()
  else:
    list_file.close
    exit()
elif argv[1] == "get-keywords":
  # Command line: <program> get-vector
  for the_file in sorted(listdir("dump_responses")):
    print("main.file:", the_file)
    with open(join("dump_responses", the_file)) as document:
      keywords = get_keywords(document.read())
      if keywords:
        print(the_file, keywords)
      document.close()
      exit() # stub 1 request
  exit()
  get_keywords()
else:
  show_help()
  exit()

# vim: se et ts=2 sw=2 number syntax=python:
